# Default values for piwhelm.
global:
  piwhelm: # to be replaced with chart name
    secrets: # Secrets configuration section
      imageCredentials: # Credentials secrets configuration section (optional)
        name: my-credentials # required if enabled
        enabled: true # set to true to render image pull secret
        registry: quay.io # required if enabled
        username: someone # required if enabled
        password: sillyness # required if enabled
        email: someone@host.com # required if enabled
      otherSecrets:
        - name: secret1 # required if enabled
          enabled: true # set to true to render this secret
          type: Opaque # defaults to Opaque if not specified
          data: # key-value pairs, values will be base64 encoded
            secretkey1: value1
            secretkey2: value2
        - name: secret2
          enabled: false # not rendered if false
          type: Opaque
          data:
            secretkey3: value3
            secretkey4: value4
      externalSecrets: # External secrets configuration section (optional)
        - name: external-secret-1 # required
          apiVersion: external-secrets.io/v1 # defaults to external-secrets.io/v1 if not specified
          kind: ClusterSecretStore # defaults to ClusterSecretStore if not specified
          storeName: 1password # defaults to 1password for 1Password integration
          data:
            - secretKey: API_TOKEN # required
              remoteRef:
                key: my-1password-item-id # required (1Password item ID)
                property: credential # required (1Password field name)
            - secretKey: EMAIL
              remoteRef:
                key: my-1password-item-id
                property: email
            - secretKey: DOMAIN
              remoteRef:
                key: my-1password-item-id
                property: domain
    deployment: # Deployment configuration section
      enabled: true
      name: piwhelm
      apiVersion: apps/v1
      replicas: 1
      nodeSelector: # Node selector for deployment
        device: raspi
      containers: # Containers configuration section
        - name: container-1
          enabled: true
          image: docker-image-1
          imagePullPolicy: ""
          securityContext: # Container security context (optional)
            capabilities:
              add: [ "NET_ADMIN" ]
          envFrom: # Environment variables from ConfigMap (optional)
            - configMapRef:
                name: configmap-name # To match with configMap.name below
          ports: # Container ports (optional)
            - name: name-port-example
              containerPort: 8888
              protocol: TCP # Protocol (optional)
          volumeMounts: # Volume mounts (optional)
            - name: volume-example
              mountPath: path/to/volume
      volumes: # Volumes for deployment (optional)
        - name: log-volume
          emptyDir: true # Create an emptyDir volume
        - name: name-volume
          persistentVolumeClaim: pvc-claim-name

    configMap: # ConfigMap configuration section (optional)
      name: configmap-name
      enabled: true

    services: # Kubernetes services configuration section (optional)
      - name: my-service # required if enabled
        enabled: true # set to true to render this service
        type: ClusterIP # defaults to ClusterIP if not specified
        ports: # Service ports (required if enabled)
          - name: http
            protocol: TCP
            port: 80
            targetPort: 8080

    pvcs: # PersistentVolumeClaims configuration section (optional)
      - name: my-pvc # required if enabled
        enabled: true # set to true to render this PVC
        storageClassName: standard # optional, defaults to empty
        volumeName: my-volume # optional
        accessModes: [ReadWriteMany] # defaults to empty list if not specified
        volumeMode: Filesystem # optional
        storage: 1Gi # required if enabled
    pvs: # PersistentVolumes configuration section (optional)
      - name: my-pv # required if enabled
        enabled: true # set to true to render this PV
        storageClassName: standard # optional, defaults to empty
        capacity:
          storage: 1Gi # required if enabled
        accessModes: [ReadWriteMany] # defaults to empty list if not specified
        persistentVolumeReclaimPolicy: Retain # defaults to Delete if not specified
        nfs:
          path: /mnt/data # required if enabled
          server: 10.0.0.1 # required if enabled
          readOnly: false # defaults to false
    ingressroutes: # Ingress routes configuration section (optional)
      - name: my-ingressroute # required if enabled
        apiVersion: traefik.io/v1alpha1 # defaults to traefik.io/v1alpha1 if not specified
        enabled: true # set to true to render this ingress route
        serviceName: my-service # optional
        entryPoints:
          - web
          - websecure
        routes:
          - match: Host(`your_domain.com`) # required if enabled
            enabled: true # set to true to render this route
            kind: Rule # defaults to Rule if not specified
            middlewares: [] # optional, defaults to empty list
            services:
              - kind: Service # defaults to Service if not specified
                enabled: true # set to true to render this service
                name: my-service # required if enabled
                namespace: repoflow # optional, defaults to release namespace
                port: 80 # required if enabled
    extraLabels: # Extra labels for all the manifests (optional)
      label1: value1
      label2: value2
